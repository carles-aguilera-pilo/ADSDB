from src.exploitation_zone.aStrategyExploit import StrategyExploitZone
from minio_connection import MinIOConnection
from chroma_connection import ChromaConnection
from sentence_transformers import SentenceTransformer
from tqdm import tqdm

model = SentenceTransformer('all-MiniLM-L6-v2')
exploitation_zone = "exploitation-zone"
trusted_zone = "trusted-zone"

collection_name = "exploitation-zone_text"

class ExploitZoneText(StrategyExploitZone):
    def executar(self):
        minio_client = MinIOConnection()
        chroma_client = ChromaConnection()

        paginator = minio_client.get_paginator('list_objects_v2')
        collection = chroma_client.get_or_create_collection(name=collection_name)

        for page in tqdm(paginator.paginate(Bucket=trusted_zone, Prefix="text/")):
            for obj in page.get("Contents", []):
                key = obj.get("Key", "")
                response = minio_client.get_object(Bucket=trusted_zone, Key=key)
                document_content = response['Body'].read().decode('utf-8')

                embedding = model.encode([document_content])[0]

                collection.add(
                    documents=[document_content],
                    embeddings=[embedding],
                    ids=[key]
                )
                minio_client.copy_object(
                    Bucket=exploitation_zone,
                    CopySource={'Bucket': trusted_zone, 'Key': key},
                    Key=key
                )
        print("Text embeddings added to ChromaDB collection.")

